@page
@using EasyAbp.CacheManagement.Authorization
@using EasyAbp.CacheManagement.Localization
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Mvc.Localization
@using Volo.Abp.AspNetCore.Mvc.UI.Layout
@model EasyAbp.CacheManagement.Web.Pages.CacheManagement.CacheItems.CacheItem.KeyListModel
@inject IHtmlLocalizer<CacheManagementResource> L
@inject IAuthorizationService Authorization
@inject IPageLayout PageLayout
@{
    PageLayout.Content.Title = L["CacheItemData"].Value;
    PageLayout.Content.BreadCrumb.Add(L["Menu:CacheItem"].Value);
    PageLayout.Content.MenuItemName = "EasyAbpCacheManagementCacheItem";
}

@section scripts
{
    <abp-script src="/Pages/CacheManagement/CacheItems/CacheItem/keyList.js" />
}
@section styles
{
    <abp-style src="/Pages/CacheManagement/CacheItems/CacheItem/keyList.css"/>
}

<script>
    let cacheItemId = '@Model.CacheItem.Id'
</script>

<abp-card>
    <abp-card-header>
        <abp-row>
            <abp-column size-md="_6">
                <abp-card-title>@L["CacheItemData"] - @Model.CacheItem.DisplayName</abp-card-title>
            </abp-column>
            <abp-column size-md="_6" class="text-right">
                @if (await Authorization.IsGrantedAsync(CacheManagementPermissions.CacheItems.ClearCache))
                {
                    <abp-button id="ClearAllCacheButton"
                                text="@L["ClearAllCache"].Value"
                                button-type="Danger"/>
                }
            </abp-column>
        </abp-row>
    </abp-card-header>
    <abp-card-body>
        <abp-table striped-rows="true" id="CacheItemTable" class="nowrap">
            <thead>
            <tr>
                <th>@L["Actions"]</th>
                <th>@L["CacheItemCacheKey"]</th>
            </tr>
            </thead>
        </abp-table>
    </abp-card-body>
</abp-card>